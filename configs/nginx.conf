user  nginx;
worker_processes  8;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  20000;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    limit_req_zone $binary_remote_addr zone=allips1:30m rate=30r/s;
    limit_req_zone $server_name zone=allips2:10m rate=10000r/s;

    upstream service_isj1{
        server 172.28.235.106:39090 max_fails=1 fail_timeout=60s;
    }

    upstream service_isj2{
        server 172.28.235.108:39090 max_fails=1 fail_timeout=60s;
        server 172.28.235.109:39090 max_fails=1 fail_timeout=60s;
    }

    upstream service_properpush{
        server 172.28.235.113:35555 max_fails=1 fail_timeout=60s;
        server 172.28.235.114:35555 max_fails=1 fail_timeout=60s;
        server 172.28.235.115:35555 max_fails=1 fail_timeout=60s;
    }

    server {
        listen       80;
        server_name  localhost;

        limit_req zone=allips1 burst=10 nodelay;
        limit_req zone=allips2 burst=10 nodelay;

        location ^~ /isj/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_next_upstream http_500 http_502 http_504 error timeout invalid_header;

            if ($request_method ~* "OPTIONS") {
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
                add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Max-Age' '1000' always;
                return 200;
            }

            set $a 0;
            if ($http_authorization ~* "eyJpZCI6IjRlNzUxZGZmLTNkYjgtNGYzZi05OTNkLWRmYzlhOTQ1MjA1YSIsIm5hbWUiOiIxNTY5ODgzNTc1NiJ9") {
                set $a 1;
            }

            if ($a = 1){
                proxy_pass http://service_isj1$request_uri;
            }
            if ($a = 0){
                proxy_pass http://service_isj2$request_uri;
            }
        }

        location ^~ /properpush/ {
            proxy_next_upstream http_500 http_502 http_504 error timeout invalid_header;

            proxy_pass http://service_properpush/properpush/;
        }
    }
}
