user  nginx;
worker_processes  8;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  10000;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      '"$request_time"';

    map $request_time $loggable {
        ~^0     0;
        default 1;
    }
    log_format slowreq '"$time_local","$request","$status","$request_time","$upstream_connect_time","$upstream_response_time"';
    log_format reqstat '"$time_local","$request","$status","$request_length","$content_length","$body_bytes_sent","$bytes_sent","$upstream_response_length","$http_authorization","$request_time","$upstream_connect_time","$upstream_response_time"';
    access_log  /var/log/nginx/req_slow_2017-01-17.log slowreq if=$loggable;
    access_log  /var/log/nginx/req_stat_2017-01-17.log reqstat;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    #限制访问频率
    #limit_req_zone $binary_remote_addr zone=allips1:30m rate=30r/s;
    limit_req_zone $server_name zone=allips2:10m rate=10000r/s;

    upstream service_isj1{
        server 172.28.235.113:39091 max_fails=5 fail_timeout=15s;
        server 172.28.235.113:39092 max_fails=5 fail_timeout=15s;
        server 172.28.235.115:39091 max_fails=5 fail_timeout=15s;
        server 172.28.235.115:39092 max_fails=5 fail_timeout=15s;
    }

    #upstream service_isj2{
    #    server 172.28.235.115:39092 max_fails=5 fail_timeout=15s;
    #}

    #upstream service_isj_pt{
    #    server 172.28.235.115:39092 max_fails=5 fail_timeout=15s;
    #}

    upstream service_properpush{
        server 172.28.235.113:35555 max_fails=1 fail_timeout=60s;
        server 172.28.235.115:35555 max_fails=1 fail_timeout=60s;
    }

    server {
        listen       80;
        server_name  localhost;

        #limit_req zone=allips1 burst=10 nodelay;
        limit_req zone=allips2 burst=10 nodelay;

        large_client_header_buffers 4 16k;
        client_max_body_size 30m;
        client_body_buffer_size 128k;
        proxy_connect_timeout 300;
        proxy_read_timeout 300;
        proxy_send_timeout 300;
        proxy_buffer_size 64k;
        proxy_buffers   4 32k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;

        location ^~ /isj/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_next_upstream http_500 http_502 http_504 error timeout invalid_header;

            if ($request_method ~* "OPTIONS") {
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
                add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Max-Age' '1000' always;
                return 200;
            }

            #将指定用户导向指定服务器
            #set $a 0;
            #if ($http_authorization ~* "eyJpZCI6IjlmNTViZGU0LTQ2YmEtNDk1ZC04ZTYwLTI0MGE0YmJiYjU4YiIsIm5hbWUiOiIxMzk0MDQzNjk1OCJ9") {
            #    set $a 1;
            #}

            #拦截url
            #if ($request_uri ~* "/pay/cmb/prepayInfo") {
            #    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
            #    add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS' always;
            #    add_header 'Access-Control-Allow-Origin' '*' always;
            #    add_header 'Access-Control-Max-Age' '1000' always;
            #    return 400 'updating...';
            #}

            #if ($a = 1){
            #    proxy_pass http://service_isj2$request_uri;
            #}
            #if ($a = 0){
            #    proxy_pass http://service_isj1$request_uri;
            #}

            proxy_pass http://service_isj1/isj/;
        }

        #通过改变支付通知url进行重定向服务器
        #location ^~ /isj_pt/ {
        #    proxy_set_header Host $host;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_next_upstream http_500 http_502 http_504 error timeout invalid_header;
        #    proxy_pass http://service_isj_pt/isj/;
        #}

        location ^~ /isjadm/ {
            default_type application/octet-stream;
            root /etc/nginx;
        }

        location ^~ /properpush/ {
            proxy_next_upstream http_500 http_502 http_504 error timeout invalid_header;

            proxy_pass http://service_properpush/properpush/;
        }

        location ^~ /www/ {
            root /etc/nginx/;
        }

        location ^~ /nginx-status {
            stub_status on;
            access_log  off;
        }
    }
}
